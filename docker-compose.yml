version: '3.4'

services:
    dnsmasq:
        image: andyshinn/dnsmasq
        restart: unless-stopped
        cap_add:
            - NET_ADMIN
        ports:
            - "127.0.0.1:53:53/tcp"
            - "127.0.0.1:53:53/udp"
        command: --address=/.test/127.0.0.1 --server 8.8.8.8 --server 8.8.4.4 --log-facility=-
        hostname: dnsmasq
        domainname: test
        container_name: dde_dnsmasq

    reverseproxy:
        image: jwilder/nginx-proxy
        restart: unless-stopped
        ports:
            - "127.0.0.1:80:80"
            - "127.0.0.1:443:443"
        environment:
            - SSL_POLICY=Mozilla-Modern
        volumes:
            - /var/run/docker.sock:/tmp/docker.sock:ro
            - ./data/reverseproxy/etc/nginx/certs:/etc/nginx/certs
            - ./data/reverseproxy/etc/nginx/conf.d/custom.conf:/etc/nginx/conf.d/custom.conf:ro
        hostname: reverseproxy
        domainname: test
        container_name: dde_reverseproxy

    portainer:
        image: portainer/portainer
        restart: unless-stopped
        command: --no-auth -H unix:///var/run/docker.sock --logo "https://www.whatwedo.ch/wp-content/uploads/2016/05/whatwedo-logo-inverted.svg"
        environment:
            - VIRTUAL_HOST=portainer.test
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        hostname: portainer
        domainname: test
        container_name: dde_portainer

    mariadb:
        image: mariadb
        restart: unless-stopped
        ports:
            - "127.0.0.1:3306:3306"
        environment:
            - MYSQL_ROOT_PASSWORD=root
        volumes:
            - ./data/mariadb/var/lib/mysql:/var/lib/mysql:delegated
        hostname: mariadb
        domainname: test
        container_name: dde_mariadb

    mailhog:
        image: mailhog/mailhog
        restart: unless-stopped
        command: -storage=maildir -maildir-path=/var/lib/mailhog
        environment:
            - VIRTUAL_HOST=mailhog.test
            - VIRTUAL_PORT=8025
        volumes:
            - ./data/mailhog/var/lib/mailhog:/var/lib/mailhog:delegated
        hostname: mailhog
        domainname: test
        container_name: dde_mailhog

    ssh-agent:
        build:
            context: docker/ssh-agent/.
        restart: unless-stopped
        environment:
            - DDE_UID=${DDE_UID}
            - DDE_GID=${DDE_GID}
        volumes:
            - ~/.ssh:/home/dde/.ssh
            - ssh-agent_socket-dir:/tmp/ssh-agent
        hostname: ssh-agent
        domainname: test
        container_name: dde_ssh-agent

networks:
    default:
        external:
            name: "dde"

volumes:
    ssh-agent_socket-dir:
        name: dde_ssh-agent_socket-dir
